FORMAT: 1A
HOST: http://www.google.com

# Panoptes API
Panoptes API is a *crowdsourcing system* based on serving _subjects_,
images or other media, to _volunteers_ and asking them to _classify_
the _subject_ based on a defined _workflow_ for the _subject_ type.


# Authentication
Panoptes API provides an OAuth 2.0 authentication mechanism. (TODO:
Describe Authentication Workflow).

# Panoptes API Root [/]
Panoptes API entry point.

This resource does not have attributes intstead it lists links to the
available resources.

## Retrieve Entry Point [GET]

+ Response 200 (application/vnd.api+json)

    + Body
    
            {
                "links": {
                    "subjects": "/subjects",
                    "users": "/users",
                    "projects": "/projects",
                    "workflows": "/workflows",
                    "subject_sets": "/subject_sets",
                    "groups": "/groups",
                    "classifications": "/classifications",
                    "memberships": "/memberships",
                    "collections": "/collections"
                }
            }

# Group User
Resources related to *Panotpes API Users*

## User [/users/{id}]
A single User object. A User is representation of the identity and
contributions of a voluneteer.

The User resource has the following attribtues:

- id
- created_at
- updated_at
- credited_name
- display_name
- login
- email
- zooniverse_id
- classifications_count
- languages

*id*, *zooniverse_id*, *created_at*, *updated_at*, and
 *classification_count* are created and updated by the Panoptes API.

+ Parameters
    + id (integer) ... ID of the User as an integer key

+ Model (application/vnd.api+json)

    JSON-API representation of the User Resource.

    + Body

            {
                "links": {
                    "users.projects": {
                        "href": "/projects/{users.projects}",
                        "type": "projects"
                    },
                    "users.user_groups": {
                        "href": "/groups/{users.user_groups}",
                        "type": "user_groups"
                    },
                    "users.subjects": {
                        "href": "/subjects/{users.subjects}",
                        "type": "subjects"
                    },
                    "users.collections": {
                        "href": "/collections/{users.collections}",
                        "type": "collections"
                    }
                },
                "users": {
                    "id": 1,
                    "created_at": "2014-03-20T00:15:47Z",
                    "updated_at": "2013-09-30T10:20:32Z",
                    "created_name": "Dr. Stuart Lynn",
                    "display_name": "stuart",
                    "login": "stuart",
                    "email": "stuart@zoooniverse.org",
                    "zooniverse_id": "123432",
                    "classifications_count": "104",
                    "langauges": ["en-gb", "es-mx"],
                    "links": {
                        "projects": ["4", "43", "220"],
                        "user_groups": ["8"],
                        "subjects": ["1", "20", "40", "567"],
                        "collections": ["3"]
                    }
                }
            }

### Retrieve a single User [GET]
+ Response 200

    [User][]

### Edit a single User [PUT]
The currently logged in User may edit their record by sending a
partial representation of the resource including their changes. A User
cannot edit their links.

+ Request (application/vnd.api+json)

        {
            "users": {
                "credited_name": "Dr. Stuart Lynn, DDS"
            }
        }

+ Response 200 (application/vnd.api+json)

    [User][]

### Destory a single User [DELETE]
The current logged in User may delete themselves. This does not fully
remove their record. It deactivates their projects and removes
personally identifying information.

+ Response 204

## Users Collection [/users{?page,per_page,sort}]
Collection of all Users

All collections add a *meta* attribute that is a hash containing
paging information.

- meta

User resources are included a an array under the _users_ key

+ Model (application/vnd.api+json)

    JSON-API formatted respresentation of the Users collection

    + Body
    
            {
                "links": {
                    "user.projects": {},
                    "user.user_groups": {},
                    "user.subjects": {},
                    "user.collections": {}
                },
                "meta": {
                    "users": {
                        "page": 1,
                        "page_size": 2,
                        "count": 28,
                        "include": [],
                        "page_count": 14,
                        "previous_page": 14,
                        "next_page": 2,
                        "first_href": "/users?page_size=2",
                        "previous_href": "/users?page=14page_size=2",
                        "next_href": "/users?page=2&page_size=2",
                        "last_href": "/users?page=14&page_size=2"
                    }
                }
                "users": [{
                    "id": 1,
                    "created_at": "2014-03-20T00:15:47Z",
                    "updated_at": "2013-09-30T10:20:32Z",
                    "created_name": "Dr. Stuart Lynn",
                    "display_name": "stuart",
                    "login": "stuart",
                    "email": "stuart@zoooniverse.org",
                    "zooniverse_id": "123432",
                    "classifications_count": "104",
                    "langauges": ["en-gb", "es-mx"],
                    "links": {
                        "projects": ["4", "43", "220"],
                        "user_groups": ["8"],
                        "subjects": ["1", "20", "40", "567"],
                        "collections": ["3"]
                    }
                },
                {
                    "id": 2,
                    "created_at": "2014-03-20T00:15:47Z",
                    "updated_at": "2013-09-30T10:20:32Z",
                    "created_name": "Dr. Stuart Lynn",
                    "display_name": "stuart",
                    "login": "stuart",
                    "email": "stuart@zoooniverse.org",
                    "zooniverse_id": "123432",
                    "classifications_count": "104",
                    "langauges": ["en-gb", "es-mx"],
                    "links": {
                        "projects": ["4", "43", "220"],
                        "user_groups": ["8"],
                        "subjects": ["1", "20", "40", "567"],
                        "collections": ["3"]
                    }
                }]
            }

### List all Users [GET]
+ Parameters
    + page (optional, integer) ... index of the collection page, 1 is
      default
    + per_page (optional, integer) ... number of items on a page. 20
      is default
    + sort (optional, string) ... fields to sort collection by. id is
      default

+ Response 200

    [Users Collection][]
    
# Group Classification
Resources related to _Pantopes Classifications_.

## Classification [/classification/{id}]
A single Classification resource object. This represents a _user's_
responses to a _worflow's_ questions about a _subject_.
                
A classifications has the following attributes:

- id
- created_at
- updated_at
- complete
- annotations

Annotations is an array of of hashes. Hashes that answer a workflow
question have the form `{ "key": "workflow question", "value": "user
response"}` in addition there are following hashes that should be
generated by a client:

- started_at
- finished_at
- user_agent

+ Model (application/vnd.api+json)

    JSON-API formatted represenation of a classificaiton object

    + Body

            {
                "links": {
                    "classifications.user": {
                        "href": "/users/{classifications.user",
                        "type": "classification"
                    },
                    "classifications.project": {
                        "href": "/projects/{classifications.project}",
                        "type": "project"
                    },
                    "classifications.workflow": {
                        "href": "/workflows/{classification.workflow}",
                        "type": "workflow"
                    },
                    "classifications.subject": {
                        "href": "/subjects/{classifications.subject}"
                        "type": "subject"
                    },
                },
                "classifications": {
                    "id": 1001,
                    "created_at": "2014-08-24T22:24:32Z",
                    "updated_at": "2014-08-24T22:24:32Z",
                    "complete": false,
                    "annotations: [
                        {"key": "workflow-1", "value": [10.4, 12.4, 13.2]},
                        {"started_at": "2014-08-24T22:20:21Z"},
                        {"finished_at": "2014-08-24T22:24:31Z"},
                        {"user_agent": "cURL"}
                    ],
                    "links": {
                        "user": "1",
                        "subject": "10",
                        "workflow": "81",
                        "project": "2"
                    }
                }
            }

### Retrieve a single Classification [GET]
A User can only retrieve a single classification is it not completed
in order to finish it. Otherwise they can get a list of
classifications from the Classification Collection resource.

+ Response 200

    [Classification][]

### Edit a single Classification [PUT]
A User may modify an incomplete classification. It should be marked as
completed when done.

+ Request (application/vnd.api+json)

        {
            "classifications": {
                "annotations": [
                    {"key": "workflow-1", "value": [10.4, 12.4, 13.2]},
                    {"key": "workflow-2", "value": "fishy"},
                    {"started_at": "2014-08-24T22:20:21Z"},
                    {"finished_at": "2014-08-24T22:24:31Z"},
                    {"user_agent": "cURL"}
                ]
                "complete": true
            }
        }

+ Response 200

    [Classification][]

### Destroy a single Classification [DELETE]
A User may delete an incomplete classification.

+ Response 204

## Classification Collection [/classifications{?page,per_page,sort,project_id,group_id}]
A representation of all the Classifications in a collection

All collections add a *meta* attribute that is a hash containing
paging information.

- meta

Classifications are return as an array under the _classifications_
key. 

+ Model (application/vnd.api+json)

    A JSON API formatted respresentation of a collection of
    classification resources

    + Body
    
            {
                "links": {
                    "classifications.user": {
                        "href": "/users/{classifications.user",
                        "type": "classification"
                    },
                    "classifications.project": {
                        "href": "/projects/{classifications.project}",
                        "type": "project"
                    },
                    "classifications.workflow": {
                        "href": "/workflows/{classification.workflow}",
                        "type": "workflow"
                    },
                    "classifications.subject": {
                        "href": "/subjects/{classifications.subject}"
                        "type": "subject"
                    },
                },
                "meta": {
                    "classifications": {
                        "page": 1,
                        "page_size": 2,
                        "count": 28,
                        "include": [],
                        "page_count": 14,
                        "previous_page": 14,
                        "next_page": 2,
                        "first_href": "/classifications?page_size=2",
                        "previous_href": "/classifications?page=14page_size=2",
                        "next_href": "/classifications?page=2&page_size=2",
                        "last_href": "/classifications?page=14&page_size=2"
                    }
                },
                "classifications": [{
                    "id": 1001,
                    "created_at": "2014-08-24T22:24:32Z",
                    "updated_at": "2014-08-24T22:24:32Z",
                    "complete": false,
                    "annotations: [
                        {"key": "workflow-1", "value": [10.4, 12.4, 13.2]},
                        {"started_at": "2014-08-24T22:20:21Z"},
                        {"finished_at": "2014-08-24T22:24:31Z"},
                        {"user_agent": "cURL"}
                    ],
                    "links": {
                        "user": "1",
                        "subject": "10",
                        "workflow": "81",
                        "project": "2"
                    }
                },
                {
                   "id": 1002,
                    "created_at": "2014-08-24T22:25:32Z",
                    "updated_at": "2014-08-24T22:28:32Z",
                    "complete": ture,
                    "annotations: [
                        {"key": "workflow-1", "value": [10.4, 12.4, 13.2]},
                        {"key": "workflow-2", "value": "starry"},
                        {"started_at": "2014-08-24T22:24:21Z"},
                        {"finished_at": "2014-08-24T22:28:31Z"},
                        {"user_agent": "cURL"}
                    ],
                    "links": {
                        "user": "1",
                        "subject": "11",
                        "workflow": "81",
                        "project": "2"
                    }
                }]
                
            }

### List all classifications [GET]
Only lists a classifications the active user has made, or
classifications from other members of a user_group or projects the
user has permission to view.

+ Parameters
    + page (optional, integer) ... index of the collection page, 1 is
      default
    + per_page (optional, integer) ... number of items on a page. 20
      is default
    + sort (optional, string) ... fields to sort collection by. updated_at is
      default
    + project_id (optional, integer) ... only retrieve classifications
      for a specific project
    + group_id (optional, integer) ... only retrieve classifications
      for a specific user group

+ Response 200

    [Classification Collection][]

### Create a Classification [POST]
Create a classification by providing a JSON-API formatted object that
must include annotations and a links hash with a subject, a project, and a
workflow. Optionally may include the complete field, which will be
set to true by default.

+ Request (application/vnd.api+json)

        {
            "classifications": {
                "complete": flase
                "annotations": [
                    {"key": "workflow-1", "value": [10.4, 12.4, 13.2]},
                    {"started_at": "2014-08-24T22:20:21Z"},
                    {"finished_at": "2014-08-24T22:24:31Z"},
                    {"user_agent": "cURL"}
                ],
                "links": {
                    "subject": "11",
                    "workflow": "81",
                    "project": "2"
                }
            }
        }

+ Response 201

    [Classification][]

# Group Subjects
Resources related to _Panoptes Subjects_.

## Subject [/subjects/{id}]
A single Subject object. A Subject is a resource that describe a
peice of media to be classified including metadata about the object.

- id
- zooniverse_id
- created_at
- updated_at
- locations
- metadata

*id*, *zooniverse_id*, *created_at*, and *updated_at* are assigned by
 the API. 

+ Model (application/vnd.api+json)

    JSON API formatted represenation of a Panoptes Subjects

    + Body
    
            {
                "links": {
                    "subjects.project": {
                        "href": "/projects/subjects.project",
                        "type": "project"
                    }
                },
                "subjects": {
                    "id": "1",
                    "zooniverse_id": "AGFS0001231",
                    "created_at": "2014-03-24T10:42:21Z",
                    "updated_at": "2014-03-24T10:42:21Z",
                    "locations": {
                        "standard": "http://s3.amazonaws.com/subjects/1.png"
                    },
                    "metadata": {
                        "lens_type": "50mm"
                    },
                    links: {
                        "project": "1",
                        "owner": {
                            id: "2",
                            href: "/users/2",
                            type: "user"
                        }
                    }
                }
            }

### Retrieve a single Subject [GET]
+ Response 200

    [Subject][]

### Edit a single Subject [PUT]
Users are permitted to edit subjects they are owners of or subjects
belonging to projects a user has edit permissions for. The request
should contain a full representation of the the locations and/or
metadata hash. You cannot change the project or owner of a subject.

+ Request (application/vnd.api+json)

        {
            "subjects": {
                location: {
                    "standard": "http://s3.amazonaws.com/subjects/2.jpg"
                }
            }
        }

+ Response 200

    [Subject][]

### Destroy a single subject [DELETE]
Users are permitted to destroy a subjects they are owners of or
subjects belongs to a project a user has destroy permissions for.

+ Response 204

## Subject Collection [/subjects{?page,per_page,sort,workflow_id,subject_set_id}]
Represenents a collection of subjects. 

All collections add a *meta* attribute that is a hash containing
paging information.

- meta

Subjects are returned as an array under the _subject_ key.

+ Model (application/vnd.api+json)

    + Body

            {
                "links": {
                    "subjects.project": {
                        "href": "/projects/subjects.project",
                        "type": "project"
                    }
                },
                "meta": {
                    "subjects": {
                        "page": 1,
                        "page_size": 2,
                        "count": 28,
                        "include": [],
                        "page_count": 14,
                        "previous_page": 14,
                        "next_page": 2,
                        "first_href": "/subjects?page_size=2",
                        "previous_href": "/subjects?page=14page_size=2",
                        "next_href": "/subjects?page=2&page_size=2",
                        "last_href": "/subjects?page=14&page_size=2"
                    }
                },
                "subjects": [{
                    "id": "1",
                    "zooniverse_id": "AGFS0001231",
                    "created_at": "2014-03-24T10:42:21Z",
                    "updated_at": "2014-03-24T10:42:21Z",
                    "locations": {
                        "standard": "http://s3.amazonaws.com/subjects/1.png"
                    },
                    "metadata": {
                        "lens_type": "50mm"
                    },
                    links: {
                        "project": "1",
                        "owner": {
                            id: "2",
                            href: "/users/2",
                            type: "user"
                        }
                    }
                },{
                    "id": "2",
                    "zooniverse_id": "AGFS0001232",
                    "created_at": "2014-03-24T10:44:21Z",
                    "updated_at": "2014-03-24T10:44:21Z",
                    "locations": {
                        "standard": "http://s3.amazonaws.com/subjects/2.png"
                    },
                    "metadata": {
                        "lens_type": "50mm"
                    },
                    links: {
                        "project": "1",
                        "owner": {
                            id: "4",
                            href: "/groups/4",
                            type: "user_group"
                        }
                }]
            }

### Retrieve a List of Subjects [GET]
Subjects allow a special sort option called 'random' that produces a
random list of subjects that have no previously been seen by the
active user. When the random sort is used, *workflow_id* becomes a
required parameter.

+ Parameters
  + page (optional, integer) ... the index of the page to retrieve
    default is 1
  + per_page (optional, integer) ... number of items to include on a
    page default is 20
  + sort (optional, string) ... field to sort by 'random' has special behaviour
  + workflow_id (options, intger) ... filter to subjects belonging to
    a specific workflow. Required when sort is 'random'
  + subject_set_id (options, intger) ... return subjects belonging to
    the identified subject_set

+ Response 200

    [Subject Collection][]

### Create a Subject [POST]
Locations and a project link are required. Metadata and a link to an
owner besides the active user are optional.

+ Request (application/vnd.api+json)

        {
            "subjects": {
                "locations": {
                    "standard": "http://s3.amazonaws.com/subjects/2.png"
                },
                "metadata": {
                    "lens_type": "50mm"
                },
                links: {
                    "project": "1",
                    "owner": {
                        id: "4",
                        type: "user_group"
                    }
                }
            }
        }

+ Response 201

    [Subject][]

# Group Projects
Resources related to _Panoptes Projects_.

## Project [/projects/{id}]
A single project object. A Project is a collection of subjects,
workflows, and supplementary text that describe the task a volunteer
is being asked to perform.

It has the following attributes

- id
- created_at
- updated_at
- name
- display_name
- content
- user_count
- classification_count
- activated_state
- primary_language
- visible_to

*id*, *created_at*, *updated_at*, *user_count*, and
 *classification_count* are set by the API.

+ Model (application/vnd.api+json)

    + Body
            
            {
                "links": {
                    "projects.subjects": {
                        "href": "/subjects{?project_id=projects.id}
                        "type": "subject"
                    },
                    "projects.classifications": {
                        "href": "/classifications{?project_id=projects.id}",
                        "type": "classification"
                    },
                    "projects.workflows": {
                        "href": "/workflows/{projects.workflows}",
                        "type": "workflow"
                    },
                    "projects.subject_sets": {
                        "href": "/subject_sets/{projects.subject_sets}",
                        "type": "subject_Sets"
                    },
                },
                "projects": {
                    "id": "1",
                    "created_at": "2014-03-24T10:42:21Z",
                    "updated_at": "2014-03-24T10:42:21Z",
                    "name": "galaxy_zoo",
                    "display_name": "Galaxy Zoo",
                    "primary_language": "en",
                    "user_count": "10000",
                    "classification_count": "1000000",
                    "activated_state": 0,
                    "visible_to": [],
                    "content": {
                        "title": "Galaxy Zoo",
                        "description": "A Project ...",
                        "pages": {},
                        "language": "en"
                    },
                    links: {
                        "workflows": ["1", "2"],
                        "subject_sets": ["10", "13"],
                        "owner": {
                            id: "2",
                            href: "/users/2",
                            type: "user"
                        }
                    }
                }
            }

### Retrieve a single Project [GET]

+ Response 200

    [Project][]

### Edit a single Project [PUT]
A User must be the owner of a project or have update
permissions to edit. Workflow and Subject links may be edited. Removing a
subject set or workflow causes it be destroyed. Added a workflow or
subject set causes the original to be copied and a new id to be
returned. 

+ Request (application/vnd.api+json)

        {
            "projects": {
                "display_name": "Galaxy Zooooooooo!"
                "links": {
                    "workflows": ["1"]
                    "subject_sets": ["10"]
                }
            }
        }

+ Response 200

    [Project][]

### Destroy a single Project [DELETE]
A user may destroy a project they are the owner of or they have
destroy permissions for.

+ Response 204

## Project Create Links [/project/{id}/links/{link_type}]
An alternative way to edit a project's subject set and workflow
links.

### Add a Link [POST]
The body key must match the link_type parameter. Workflow and Subjects
added in this way will be copied and their id will be returned as part
of the complete Project representation response.

+ Parameters
  + id (required, integer) ... the id of the project to modify
  + link_type (required, string) ... the name of the link to edit. May
    only be workflow or subject_set

+ Request (application/vnd.api+json)

        {
            "subject_sets": ["1", "2"]
        }

+ Response 200

    [Project][]

## Project Destroy Links [/project/{id}/links/{link_type}/{link_ids]
An alternative way to destroy project links.

### Destroy a Link [DELETE]
Will destroy the comma seperated list of link ids for the given link
type. For Projects, only workflow and subject_set links can be
destroyed in this manner. The linked object will be destroyed with
this action.

+ Parameters
  + id (required, integer) ... the id of the project to modify
  + link_type (required, string) .... the name of the link to
    edit. May only be subject_set or workflow
  + link_ids (required, string) ... comma seperated list of ids to
    modify

+ Response 204

## Project Collection [/projects{?page,per_page,sort,owner}]
A collection of _Panotpes Project_ resources.

All collections add a *meta* attribute that is a hash containing
paging information.

- meta

Projects are returned as an array under the _projects_ key.

+ Model (application/vnd.api+json)

    A JSON API formatted representation of a collection of Projects.

    + Body
    
            {
                "links": {
                    "projects.subjects": {
                        "href": "/subjects{?project_id=projects.id}
                        "type": "subject"
                    },
                    "projects.classifications": {
                        "href": "/classifications{?project_id=projects.id}",
                        "type": "classification"
                    },
                    "projects.workflows": {
                        "href": "/workflows/{projects.workflows}",
                        "type": "workflow"
                    },
                    "projects.subject_sets": {
                        "href": "/subject_sets/{projects.subject_sets}",
                        "type": "subject_Sets"
                    },
                },
                "meta": {
                   "projects": {
                        "page": 1,
                        "page_size": 2,
                        "count": 28,
                        "include": [],
                        "page_count": 14,
                        "previous_page": 14,
                        "next_page": 2,
                        "first_href": "/projects?page_size=2",
                        "previous_href": "/projects?page=14page_size=2",
                        "next_href": "/projects?page=2&page_size=2",
                        "last_href": "/projects?page=14&page_size=2"
                    }
                },
                "projects": [{
                    "id": "1",
                    "created_at": "2014-03-24T10:42:21Z",
                    "updated_at": "2014-03-24T10:42:21Z",
                    "name": "galaxy_zoo",
                    "display_name": "Galaxy Zoo",
                    "primary_language": "en",
                    "user_count": "10000",
                    "classification_count": "1000000",
                    "activated_state": 0,
                    "visible_to": [],
                    "content": {
                        "title": "Galaxy Zoo",
                        "description": "A Project ...",
                        "pages": {},
                        "language": "en"
                    },
                    links: {
                        "workflows": ["1", "2"],
                        "subject_sets": ["10", "13"],
                        "owner": {
                            id: "2",
                            href: "/users/2",
                            type: "user"
                        }
                    }
                },{
                    "id": "2",
                    "created_at": "2014-04-24T10:42:21Z",
                    "updated_at": "2014-04-24T10:42:21Z",
                    "name": "planet_hunters",
                    "display_name": "Planet Hunters",
                    "primary_language": "zh-tw",
                    "user_count": "100000",
                    "classification_count": "122340000000",
                    "activated_state": 0,
                    "visible_to": [],
                    "content": {
                        "title": "Planet Hunters",
                        "description": "A Project ...",
                        "pages": {},
                        "language": "zw-tw"
                    },
                    links: {
                        "workflows": ["10", "21"],
                        "subject_sets": ["11", "12"],
                        "owner": {
                            id: "2",
                            href: "/users/2",
                            type: "user"
                        }
                    }
                }]
            }
            
### List All Projects [GET]
+ Parameters
  + page (optional, integer) ... the index of the page to retrieve
    default is 1
  + per_page (optional, integer) ... number of items to include on a
    page default is 20
  + sort (optional, string) ... field to sort by
  + owner (optional, string) ... string owner name of either a user or
    a user group to filter by.

+ Response 200

    [Project Collection][]


### Create a Project [POST]
Requires at least a name, description, and primary language. Workflows
and Subject sets added as links will be copied and their new ids
returned.

+ Request (application/vnd.api+json)

        {
            "projects": {
                "name": "galaxy_zoo"
                "description": "A doubleplus good project",
                "language": "en-us",
                "links": {
                    "workflows": ["1", "2"]
                    "owner": {
                        "id": 10,
                        "type": "user_group"
                    }
                }
            }
        }

+ Response 201

    [Project][]
                
                
            

